<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
				xmlns:s="library://ns.adobe.com/flex/spark"
				xmlns:mx="library://ns.adobe.com/flex/mx"
				xmlns:leonelcasado="http://www.leonelcasado.com.br/mxml"
				xmlns:componentes="infoliver.view.componentes.*"
				initialize="init()"
				showCloseButton="true"
				title="Pesquisa de Paciente"
				height="400" width="800"> 
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.DataGrid;
			import mx.core.Container;
			import mx.managers.PopUpManager;
			
			public var dtgPaciente:DataGrid;
			
			public function fechar(event:Event):void{
				PopUpManager.removePopUp(this);
			}
			
			public function init():void{
				addEventListener(Event.CLOSE, fechar);
				criarColunasDinamicas();
			}

			import infoliver.model.ModelLocator;
			import infoliver.model.entity.LogAcesso;
			import infoliver.model.entity.Paciente;
			import infoliver.model.entity.Usuario;
			import infoliver.model.events.LogAcessoEvent;
			import infoliver.model.events.PacienteEvent;
			import infoliver.model.events.UsuarioEvent;
			import infoliver.model.vo.PaginacaoVO;
			import infoliver.util.RoleSistema;
			import infoliver.view.componentes.ColunaArquivo;
			import infoliver.view.componentes.ColunaImagemDigital;
			import infoliver.view.componentes.ColunaImagemPaciente;
			
			import leonelcasado.com.adobe.cairngorm.componentes.Alerta;
			import leonelcasado.componentes.CustomViewHelper;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.managers.PopUpManager;
			
//			public var pacientes:ArrayCollection;
//			public var agendamentoCadastro:CAD_AgendamentoCadastro;
			public var agendamentoCadastro:Container;
			
			private var appModel:ModelLocator = ModelLocator.getInstance();
			
			private function criarColunasDinamicas():void{
//				dtg.addColunaComponenteItemRenderer("Foto",ColunaImagemPaciente,30);
//				dtg.addColunaComponenteItemRenderer("Dig.",ColunaImagemDigital,30);
//				dtg.addColunaComponenteItemRenderer("Doc.",ColunaArquivo,30);
				dtg.addColunaNumero("Pront","sequencial",null,null,50);
				dtg.addColunaNumero("Pront.Ant","sequencialPacienteAnterior",null,null,50);
				dtg.addColunaTexto("Nome","nome",null,null,200);
//				dtg.addColunaCentralizada("CPF","cpf",CustomViewHelper.dataGridMascararCpf);
				dtg.addColunaCentralizada("CNS","cns");
//				dtg.addColunaCentralizada("RG","rg");
//				dtg.addColunaCentralizada("Est.Civ","estadoCivil",null,40);
//				dtg.addColunaCentralizada("Sexo","sexo",null,40);
				dtg.addColunaData("Dt.Nascimento","dataNascimento");
//				dtg.addColunaCentralizada("Sang.","tipoSanguineo",null,40);
//				dtg.addColunaTexto("Raça","raca.descricao");
//				dtg.addColunaTexto("Escolaridade","escolaridade.descricao");
//				dtg.addColunaTexto("Encaminhador","encaminhador.descricao");
				dtg.addColunaTexto("Ocupação","ocupacao.descricao");
//				dtg.addColunaTexto("Naturalidade","municipioNaturalidade");
//				dtg.addColunaCentralizada("UF","ufNaturalidade",null,30);
//				dtg.addColunaTexto("Cônjuge","nomeConjuge");
//				dtg.addColunaTexto("Pai","nomePai");
//				dtg.addColunaTexto("Mãe","nomeMae");
//				dtg.addColunaCentralizada("Telefone Mãe","telefoneMae",CustomViewHelper.dataGridMascararDDDTelefone);
//				dtg.addColunaCentralizada("CEP","cep",CustomViewHelper.dataGridMascararCep,65);
//				dtg.addColunaTexto("Endereço","logradouro");
//				dtg.addColunaCentralizada("Nº","numeroLogradouro",null,40);
//				dtg.addColunaTexto("Complemento","complementoLogradouro");
//				dtg.addColunaTexto("Referência","referenciaLogradouro");
//				dtg.addColunaTexto("Bairro","bairroLogradouro");
//				dtg.addColunaTexto("Município","municipioLogradouro");
//				dtg.addColunaCentralizada("Cód.IBGE","codigoIbgeMunicipioLogradouro");
//				dtg.addColunaCentralizada("UF","ufLogradouro",null,30);
//				dtg.addColunaCentralizada("Telefone 01","telefone01",CustomViewHelper.dataGridMascararDDDTelefone);
//				dtg.addColunaCentralizada("Telefone 02","telefone02",CustomViewHelper.dataGridMascararDDDTelefone);
//				dtg.addColunaCentralizada("Telefone 03","telefone03",CustomViewHelper.dataGridMascararDDDTelefone);
//				dtg.addColunaTexto("E-mail","enderecoEletronico");
//				dtg.addColunaTexto("Responsável","tipoResponsavel.descricao");
//				dtg.addColunaTexto("Nome","nomeResponsavel");
//				dtg.addColunaCentralizada("CPF","cpfResponsavel",CustomViewHelper.dataGridMascararCpf);
//				dtg.addColunaCentralizada("RG","rgResponsavel");
//				dtg.addColunaCentralizada("Tel","telefoneResponsavel",CustomViewHelper.dataGridMascararDDDTelefone);
				/*dtg.addColunaTexto("Cartório","nomeCartorio");
				dtg.addColunaCentralizada("Nº Reg","numeroRegistro",null,40);
				dtg.addColunaCentralizada("Cód.Livro","codigoLivro",null,40);
				dtg.addColunaCentralizada("Nº Folha","numeroFolhaLivro",null,40);
				dtg.addColunaData("Dt.Registro","dataRegistroLivro");				
				dtg.addColunaCentralizada("Assoc.","indicadorAssociado",null,35);
				dtg.addColunaTexto("Local Estudo","localEstudo");
				dtg.addColunaTexto("Local Tabalho","localTrabalho");
				*/
//				dtg.addColunaDataHora("Dt.Cadastro","dataHoraCadastro");
//				dtg.addColunaTexto("Usuário","usuarioCadastro.nome");				
				//-----------------------------------------------------
			}
			
			public function limpar():void{
				CustomViewHelper.limparCamposFormulario(this);
				dtg.inicializarTotalizadores();
				txtValorBusca.setFocus();
			}
			
			private function ajustaCampo():void {
				trocaRestricao();
				limparCampoBusca();
			}
			
			private function trocaRestricao():void {
				if(cmbTipoPesquisa.selectedItem.data == 1) {
					txtValorBusca.restrict = "A-Z/a-z/ /";
				} else {
					txtValorBusca.restrict = "0-9";
				}
			}
			
			private function limparCampoBusca():void{
				txtValorBusca.text="";
				txtValorBusca.setFocus();
			}
			
			private function alterar():void{
				if(dtg.dtgCustom.selectedItem!=null){
//					var pacientes:ArrayCollection = new ArrayCollection();
//					pacientes.removeAll();
//					pacientes.addItem(dtg.dtgCustom.selectedItem as Paciente);
//					dtgPaciente.dataProvider = pacientes;
					agendamentoCadastro["setarPaciente"](dtg.dtgCustom.selectedItem as Paciente);
					fechar(null);
				}
			}
			
			private function listar():void{
				var paciente:Paciente=new Paciente;
				if(cmbTipoPesquisa.selectedItem.data==1)
					paciente.nome=CustomViewHelper.trim(txtValorBusca.text);
				else if(cmbTipoPesquisa.selectedItem.data==2)
					paciente.sequencial=CustomViewHelper.trim(txtValorBusca.text);
					/*else if(cmbTipoPesquisa.selectedItem.data==3)
					paciente.sequencialPacienteAnterior=CustomViewHelper.trim(txtValorBusca.text);*/
				else if(cmbTipoPesquisa.selectedItem.data==4)
					paciente.cpf=CustomViewHelper.trim(txtValorBusca.text);
				else if(cmbTipoPesquisa.selectedItem.data==5)
					paciente.cns=CustomViewHelper.trim(txtValorBusca.text);
				else if(cmbTipoPesquisa.selectedItem.data==6)
					paciente.rg=CustomViewHelper.trim(txtValorBusca.text);
				//---------------------------------------------------------------
				var paginacaoVO:PaginacaoVO=new PaginacaoVO;
				paginacaoVO.entidade=paciente;
				paginacaoVO.quantidadePaginacao=dtg.maximo;
				paginacaoVO.inicioPaginacao=dtg.indice;
				//---------------------------------------------------------------
				new PacienteEvent(PacienteEvent.LISTAR_PAGINADO,this,paginacaoVO).dispatch();
				txtValorBusca.setFocus();
			}
			
			public function result(data:Object,event:Event):void{
				if(event.type==PacienteEvent.LISTAR_PAGINADO){
					dtg.inicializarTotalizadores();
					dtg.setDataGridPaginado(data.result.totalRegistros,data.result.entidade);
				}
			}
			
			private function inicio_Click():void{
				dtg.inicio();
				listar();
			}
			
			private function retroceder_Click():void{
				dtg.retroceder();
				listar();
			}
			
			private function avancar_Click():void{
				dtg.avancar();
				listar();
			}
			
			private function fim_Click():void{
				dtg.fim();
				listar();
			}
		]]>
	</fx:Script>
	<mx:Panel width="100%" height="100%">
		<leonelcasado:CustomFieldSet title="Dados de Pesquisa" width="100%" height="10%">
			<mx:Form width="100%">
				<mx:FormItem label="Tipo:" width="100%" direction="horizontal">
					<leonelcasado:CustomComboBox id="cmbTipoPesquisa" change="ajustaCampo()">
						<fx:Array>
							<fx:Object label="NOME" data="1"/>
							<fx:Object label="PRONTUÁRIO" data="2"/>
							<!--fx:Object label="PRONTUÁRIO ANT." data="3"/-->
							<fx:Object label="CPF" data="4"/>
							<fx:Object label="CNS" data="5"/>
							<fx:Object label="RG" data="6"/>
						</fx:Array>
					</leonelcasado:CustomComboBox>
					<leonelcasado:CustomTextInput id="txtValorBusca" enter="listar()" width="100%" restrict="A-Z/a-z/ /"/>
				</mx:FormItem>
				<mx:FormItem>
					<componentes:BarraControles id="controles" styleButtons="menuButton"
												includeInLayoutBtnConsultar="true"
												consultar="listar()"
												/>
				</mx:FormItem>
			</mx:Form>
		</leonelcasado:CustomFieldSet>
		<leonelcasado:CustomDataGrid id="dtg" width="100%" height="100%"
									 horizontalScrollCustomDataGrid="on"
									 includeInLayoutBtnExcluirRegistro="false"
									 primeiroRegistro="inicio_Click()" registroAlterior="retroceder_Click()" 
									 proximoRegistro="avancar_Click()" ultimoRegistro="fim_Click()" 
									 selecionarItem="alterar()"/>
	</mx:Panel>
	
</mx:TitleWindow>

