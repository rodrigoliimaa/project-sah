<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:leonelcasado="http://www.leonelcasado.com.br/mxml"
		 xmlns:componentes="infoliver.view.componentes.*"
		 width="100%" height="100%" initialize="init()">
	<fx:Script>
		<![CDATA[
			import infoliver.model.ModelLocator;
			import infoliver.model.entity.Medico;
			import infoliver.model.entity.Ocupacao;
			import infoliver.model.events.MedicoEvent;
			import infoliver.model.vo.PaginacaoVO;
			import infoliver.util.RoleSistema;
			
			import leonelcasado.com.adobe.cairngorm.componentes.Alerta;
			import leonelcasado.componentes.Alerta;
			import leonelcasado.componentes.CustomViewHelper;
			
			import mx.collections.ArrayCollection;
			import mx.core.FlexGlobals;
			import mx.utils.StringUtil;
			
			public const NOME:String = "NOME";
			public const CPF:String = "CPF";
			public const RG:String = "RG";
			public const CNS:String = "CNS";
			public const OCUPACAO:String = "OCUPACAO";
			public const LISTA_TIPO_PESQUISA:Array = [
				NOME, CPF, RG, CNS, OCUPACAO
			];
			
			private var medicos:ArrayCollection;
			
			private var appModel:ModelLocator = ModelLocator.getInstance();
			
			private function init():void{
				criarColunas();
				validarPermissoesDaTela();
			}
			
			public function criarColunas():void{
				dtg.addColunaCentralizada("COD","sequencial", null, 30);
				dtg.addColunaCentralizada("NOME","nome", null, 300);
//				dtg.addColunaCentralizada("CPF","cpf");
				dtg.addColunaCentralizada("CPF","cpf",CustomViewHelper.dataGridMascararCpf);
				dtg.addColunaCentralizada("RG","rg");
//				dtg.addColunaCentralizada("ORGÃƒO EMISSOR","orgaoEmissor", null, 60);
				dtg.addColunaCentralizada("TELEFONE 1","telefone1");
				dtg.addColunaCentralizada("TELEFONE 2","telefone2");
				dtg.addColunaCentralizada("TELEFONE 3","telefone2");
				dtg.addColunaCentralizada("EMAIL","email");
				dtg.addColunaCentralizada("CNS","cns");
				dtg.addColunaNumero("COD","ocupacao.sequencial", null, "right", 0, false);
				dtg.addColunaCentralizada("CBO","ocupacao.codigoOcupacao", null, 0, false);
				dtg.addColunaCentralizada("OCUPACAO","ocupacao.descricao", null, 300);
				dtg.addColunaCentralizada("ATIVO","indicadorAtivo", null, 30);
				dtg.addColunaData("DATA DE CADASTRO","dataCadastro", null, 90);
			}
			
			private function validarPermissoesDaTela():void{
				if(appModel.isPermissaoValida(RoleSistema.ROLE_ALTERAR_MEDICO)) {
					dtg.includeInLayoutBtnAlterarRegistro=true;
					dtg.doubleClickEnabled = true;
				} else {
					dtg.includeInLayoutBtnAlterarRegistro=false;
					dtg.doubleClickEnabled = false;
				}
				
				if(appModel.isPermissaoValida(RoleSistema.ROLE_EXCLUIR_MEDICO)) {
					dtg.includeInLayoutBtnExcluirRegistro=true;
				} else {
					dtg.includeInLayoutBtnExcluirRegistro=false;
				}
				
				if(appModel.isPermissaoValida(RoleSistema.ROLE_INSERIR_MEDICO)) {
					controles.includeInLayoutBtnNovo=true;
				} else {
					controles.includeInLayoutBtnNovo=false;
				}
			}
			
			public function novo():void{
				FlexGlobals.topLevelApplication.principal.medico.novoMedico();
			}
			
			public function listar():void{
				var medico:Medico = new Medico();
				
				if ( StringUtil.trim(txtValorBusca.text) != "") {
					var tipoPesquisa:String = cmbTipoPesquisa.selectedItem.toString();
					if (tipoPesquisa == NOME) {
						medico.nome = StringUtil.trim(txtValorBusca.text);
					} else if (tipoPesquisa == CPF) {
						medico.cpf = StringUtil.trim(txtValorBusca.text);
					} else if (tipoPesquisa == RG) {
						medico.rg = StringUtil.trim(txtValorBusca.text);
					} else if (tipoPesquisa == CNS) {
						medico.cns = StringUtil.trim(txtValorBusca.text);
					} else if (tipoPesquisa == OCUPACAO) {
						var ocupacao:Ocupacao = new Ocupacao();
						ocupacao.descricao = StringUtil.trim(txtValorBusca.text);
						medico.ocupacao = ocupacao;
					}
				}
				
				var paginacaoVO:PaginacaoVO = new PaginacaoVO();
				paginacaoVO.entidade = medico;
				paginacaoVO.quantidadePaginacao = dtg.maximo;
				paginacaoVO.inicioPaginacao = dtg.indice;
				
				new MedicoEvent(MedicoEvent.LISTA_PAGINADO, this, paginacaoVO).dispatch();
				
				txtValorBusca.setFocus();
			}
			
			public function result(data:Object,event:Event):void{
				if (event.type == MedicoEvent.LISTA_PAGINADO) {
					medicos = data.result.entidade;
					
					dtg.inicializarTotalizadores();
					dtg.setDataGridPaginado(data.result.totalRegistros,medicos);
				}
			}
			
			public function alterar():void{
				if(dtg.dtgCustom.selectedItem!=null){
//					if(appModel.isPermissaoValida(RoleSistema.ROLE_ALTERAR_MEDICO)){
						var medico:Medico = dtg.dtgCustom.selectedItem as Medico;
						
						medico.ocupacao.sequencial = "" + (dtg.dtgCustom.selectedItem as Medico).ocupacao.sequencial;
						
						FlexGlobals.topLevelApplication.principal.medico.novoMedico(medico);
//					}
				}
			}
			
			private function fechar():void{
				FlexGlobals.topLevelApplication.fecharTela();
			}
			
			private function inicio_Click():void{
				dtg.inicio();
				listar();
			}
			
			private function retroceder_Click():void{
				dtg.retroceder();
				listar();
			}
			
			private function avancar_Click():void{
				dtg.avancar();
				listar();
			}
			
			private function fim_Click():void{
				dtg.fim();
				listar();
			}
			
			public function onCmbTipoPesquisaChange():void{
				var tipoPesquisa:String = cmbTipoPesquisa.selectedItem.toString();
				if(tipoPesquisa == NOME || tipoPesquisa == OCUPACAO) {
					txtValorBusca.restrict = "A-Z/a-z/ /";
				} else {
					txtValorBusca.restrict = "0-9";
				}
			}
		]]>
	</fx:Script>
	<leonelcasado:CustomFieldSet title="Dados de Pesquisa" width="100%" height="10%">
		<mx:Form width="100%">
			<mx:FormItem label="Tipo:" width="100%" direction="horizontal">
				<leonelcasado:CustomComboBox id="cmbTipoPesquisa" change="onCmbTipoPesquisaChange()">
					<s:ArrayList source="{LISTA_TIPO_PESQUISA}" />
				</leonelcasado:CustomComboBox>
				<leonelcasado:CustomTextInput id="txtValorBusca" width="100%" />
												  <!-- restrict="A-Z/a-z/ /" -->
			</mx:FormItem>
			<mx:FormItem>
				<componentes:BarraControles id="controles" styleButtons="menuButton"
											includeInLayoutBtnNovo="true" includeInLayoutBtnConsultar="true"
											includeInLayoutBtnFechar="true" 
											consultar="listar()"
											fechar="fechar()"
											novo="novo()"/>
			</mx:FormItem>
		</mx:Form>
	</leonelcasado:CustomFieldSet>
	<leonelcasado:CustomDataGrid id="dtg" width="100%" height="100%"
								 horizontalScrollCustomDataGrid="on"
								 primeiroRegistro="inicio_Click()" registroAlterior="retroceder_Click()" 
								 proximoRegistro="avancar_Click()" ultimoRegistro="fim_Click()"
								 includeInLayoutBtnAlterarRegistro="true"
								 includeInLayoutBtnExcluirRegistro="false"
								 alterarRegistro="alterar()" selecionarItem="alterar()"
								 />
</mx:VBox>